<?php

require_once(dirname(__FILE__) . '/AbstractTest.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-22 at 09:11:24.
 */
class Contactlab_Template_Model_Newsletter_Processor_WishlistTest extends Contactlab_Template_Model_Newsletter_Processor_AbstractTest {

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        parent::setUp();
        $this->object = Mage::getModel('contactlab_template/newsletter_processor_wishlist');
        $this->object->setStoreId($this->getStoreId());
    }
    
    /**
     * @small
     * @covers Contactlab_Template_Model_Newsletter_Processor_Wishlist::getProcessorCode
     */
    public function testGetProcessorCode() {
        $this->log("testGetProcessorCode");
        $this->assertEquals('wishlist', $this->object->getProcessorCode());
    }

    /**
     * @medium
     * Test customers
     */
    public function testCustomers() {
        return parent::testCustomers();
    }

    /**
     * Test subscription
     * @medium
     * @param Mage_Customer_Model_Customer[] $customers Customers
     * @depends testCustomers
     */
    public function testSubscription(array $customers) {
        return parent::testSubscription($customers);
    }

    /**
     * 
     * @param Mage_Customer_Model_Customer[] $customers Customers
     * @medium
     * @depends testSubscription
     */
    public function testWishlist(array $customers) {
        $this->log("testWishlist");
        $this->doTestGeneratedCustomers($customers);

        // These customers wont receive an email
        $voidWishlist = $this->generateVoidWishlist($customers[0], $this);
        $this->assertEquals(0, $voidWishlist->getItemsCount(), "This customer shouldn't have items in wishlist");

        $this->doTestGeneratedCustomers($customers);

        $notVoidWishlist = array(
            $this->generateOldWishlist($customers[1], $this),
            $this->generateWishlist($customers[2], $this),
            $this->generateYoungWishlist($customers[3], $this),
            $this->generateWishlist($customers[4], $this),
        );
        
        foreach ($notVoidWishlist as $wishlist) {
            $this->assertGreaterThan(0, $wishlist->getItemsCount(),
                    "This customer should have items in wishlist");
        }
    }

    
    /**
     * Test filters.
     * @medium
     * @param Mage_Customer_Model_Customer[] $customers Customers
     * @depends testWishlist
     */
    public function testFilters(array $customers) {
        return $this->doTestFilters($customers, "WISHLIST");
    }
}